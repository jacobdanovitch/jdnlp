strict digraph  {
"ReadUnit[read]/Linear[mem]";
"ReadUnit[read]";
"ControlUnit[control]/Linear";
"ControlUnit[control]";
"ReadUnit[read]/Linear[concat]";
"ControlUnit[control]/Linear[attn]";
"ReadUnit[read]/Linear[attn]";
"WriteUnit[write]/Linear[attn]";
"WriteUnit[write]";
"WriteUnit[write]/Linear[concat]";
MACCell;
"WriteUnit[write]/Linear[control]";
"ControlUnit[control]/Linear[control_question]";
"WriteUnit[write]/Linear[mem]";
"ReadUnit[read]/Linear[mem]" -> "ReadUnit[read]";
"ReadUnit[read]" -> "WriteUnit[write]";
"ReadUnit[read]" -> "ReadUnit[read]/Linear[attn]";
"ReadUnit[read]" -> "ReadUnit[read]/Linear[concat]";
"ControlUnit[control]/Linear" -> "ControlUnit[control]";
"ControlUnit[control]" -> "WriteUnit[write]/Linear[control]";
"ControlUnit[control]" -> "ControlUnit[control]/Linear[attn]";
"ControlUnit[control]" -> "ControlUnit[control]/Linear[control_question]";
"ControlUnit[control]" -> "ReadUnit[read]";
"ControlUnit[control]" -> "WriteUnit[write]";
"ReadUnit[read]/Linear[concat]" -> "ReadUnit[read]";
"ControlUnit[control]/Linear[attn]" -> "ControlUnit[control]";
"ReadUnit[read]/Linear[attn]" -> "ReadUnit[read]";
"WriteUnit[write]/Linear[attn]" -> "WriteUnit[write]";
"WriteUnit[write]" -> "ReadUnit[read]/Linear[mem]";
"WriteUnit[write]" -> "WriteUnit[write]/Linear[attn]";
"WriteUnit[write]" -> "WriteUnit[write]/Linear[mem]";
"WriteUnit[write]" -> "WriteUnit[write]/Linear[concat]";
"WriteUnit[write]/Linear[concat]" -> "WriteUnit[write]";
MACCell -> "WriteUnit[write]";
MACCell -> "ControlUnit[control]";
MACCell -> "ReadUnit[read]/Linear[mem]";
"WriteUnit[write]/Linear[control]" -> "WriteUnit[write]";
"ControlUnit[control]/Linear[control_question]" -> "ControlUnit[control]";
"WriteUnit[write]/Linear[mem]" -> "WriteUnit[write]";
}
